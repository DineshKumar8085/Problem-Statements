;Write an assembly language program to generate programmable software delay which is multiple of 250microsecond.  
;It should accept a 8 bit value as a count, stored at address 71H. The delay should be pro-portional to this count.
;In the sense, if the count value is 1 then delay will be 250us and if count value is2 then delay will be 2 times of 250us and so on.
;The delay is generated by a countdown loop, which usesthe instruction DJNZ (Decrement and Jump if NonZero).

ORG 00H                    ;origin address of the program
DELAY_LOOP:                
    MOV A, 71H             ;moving the content of 71H address into accumulator register
    MOV R1, A              ;moving the content of accumulator into R1 register
DELAY:            
    MOV R2, #250           ;moving the immediate data value 250 to R2 register
WAIT_LOOP:      
    DJNZ R2, WAIT_LOOP     ;Decrement the R2 register and jump to WAIT_LOOP if it not equals to zero
    DJNZ R1, DELAY         ;Decrement the R1 register and jump to DELAY if it not equals to zero 
END                        ;end the program

;Write  another  version  which  uses  a  count  up  loop,  using  CJNE  (compare  and  jump  if  not  equal).
;Inboth cases, you will have to use a loop within a loop to get the delay required in order to manage a 8 bitcount

ORG 00H                   ;origin address of the program
DELAY_LOOP:       
    MOV A, 71H            ;moving the content of 71H address into accumulator register
    MOV R1, A             ;moving the content of accumulator register into R1 registor
DELAY:
MOV R2,#00H               ;clearing the R2 register
L1:INC R2                 ;incrementing the R2 register
CJNE R2,#0FAH,L1          ;compare the content of R2 register with 0FAH(Decimal value:250) and jump if it not equals
RET                       ;return the program
END                       ;end the program
